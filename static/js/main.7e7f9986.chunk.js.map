{"version":3,"sources":["assets/sayKaren_logo-white_8.1.2019.png","components/app/numberConverter.js","components/app/DataRevealed.js","components/app/Footer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","numberConverter","value","parseFloat","toFixed","RevealData","paidToBank","extraCalcPaidToBank","interestPaidArray","mortgage","extraInterestPaidArray","length","reduce","accu","cur","totalPaid","parseInt","extraTotalPaid","interestWidth","principalWidth","extraInterestWidth","extraPrincipalWidth","className","id","style","height","backgroundColor","border","color","display","justifyContent","Footer","href","target","rel","src","sayKarenLogo","alt","App","useState","principal","setPrincipal","interestRate","setInterestRate","monthlyPayment","setMonthlyPayment","extraPayment","setExtraPayment","extraPrincipalPaidArray","setExtraPrincipalPaidArray","setExtraInterestPaidArray","extraNewEndingPrincipalArray","setExtraNewEndingPrincipalArray","principalPaidArray","setPrincipalPaidArray","setInterestPaidArray","newEndingPrincipalArray","setNewEndingPrincipalArray","generateCalculation","currentPrincipal","processEachPayment","num","principalPaid","paymentInterestPaid","balance","extraCalculation","currentExtraPrincipal","processEachExtraPayment","principalExtraPaid","paymentExtraInterestPaid","extraBalance","handleReset","e","setEvent","useEffect","setTimeout","type","name","onChange","currentTarget","undefined","onClick","window","location","reload","map","index","key","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e7f9986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sayKaren_logo-white_8.1.2019.d0827d01.png\";","const numberConverter =(value) =>{\n    return parseFloat((value).toFixed(2));\n};\n\nexport default numberConverter;","import React from 'react';\nimport numberConverter from './numberConverter';\n\nconst RevealData = ({\n  interestPaidArray,\n  mortgage,\n  extraInterestPaidArray,\n}) => {\n  let paidToBank;\n  let extraCalcPaidToBank;\n\n  if (interestPaidArray.length > 0) {\n    paidToBank = numberConverter(\n      interestPaidArray.reduce((accu, cur) => accu + cur),\n    );\n  }\n  if (extraInterestPaidArray.length > 0) {\n    extraCalcPaidToBank = numberConverter(\n      extraInterestPaidArray.reduce((accu, cur) => accu + cur),\n    );\n  }\n  const totalPaid = paidToBank + parseInt(mortgage);\n  const extraTotalPaid = extraCalcPaidToBank + parseInt(mortgage);\n  let interestWidth = (paidToBank / totalPaid) * 100;\n  let principalWidth = 100 - interestWidth;\n\n  let extraInterestWidth = (extraCalcPaidToBank / extraTotalPaid) * 100;\n  let extraPrincipalWidth = 100 - extraInterestWidth;\n\n  return (\n    <section>\n      {extraInterestPaidArray.length > 0 && (\n        <div className=\"dataForm\">\n          <h2 className=\"headerCalc\">\n            Amortization with <span className=\"positive\">Extra</span> Payment\n          </h2>\n          <div className=\"dataSection\">\n            Your loan will be paid off in{' '}\n            <span className=\"positive\">\n              {extraInterestPaidArray.length} months (\n              {(extraInterestPaidArray.length / 12).toFixed(2)} years)\n            </span>\n          </div>\n          <div className=\"dataSection\">\n            <div>\n              Loan Amount: ${mortgage} ({parseInt(extraPrincipalWidth)}%)\n            </div>\n            <div>\n              Total Interest Paid:{' '}\n              <span className=\"negative\">${extraCalcPaidToBank} ({parseInt(extraInterestWidth)}%)</span>\n            </div>\n            <div>\n\n            Total Paid:{' '}\n            <span className=\"negative\"> ${parseInt(extraTotalPaid)}</span>\n            </div>\n          </div>\n          <div className=\"dataSection\">\n            <div className='negative'>\n              Total Paid ${parseInt(extraTotalPaid)}\n            </div>\n            <div className='growGraph'>\n              <div\n                  id=\"principalBar\"\n                  className=\"detailsColumn\"\n                  style={{\n                    height: `${extraPrincipalWidth/2}%`,\n                    backgroundColor: '#61dafb',\n                    border: '2px solid white',\n                    color: '#282c34',\n\n                  }}\n              >\n                {parseInt(extraPrincipalWidth)}%\n              </div>\n              <div\n                  id=\"interestPaid\"\n                  className=\"detailsColumn\"\n                  style={{\n                    height: `${extraInterestWidth/2}%`,\n                    backgroundColor: 'red',\n                    border: '2px solid white',\n                    color: '#282c34',\n                  }}\n              >\n                {parseInt(extraInterestWidth)}%\n\n              </div>\n\n            </div>\n            <div\n            style={{display: 'flex', justifyContent: 'space-around'}}>\n              <div>Principal</div>\n              <div className='negative'>Interest</div>\n            </div>\n          </div>\n         </div>\n      )}\n      {interestPaidArray.length > 0 && (\n          <div className=\"dataForm\">\n            <h2 className=\"headerCalc\">\n              Amortization Typical Payment\n            </h2>\n            <div className=\"dataSection\">\n              Your loan will be paid off in{' '}\n              <span className=\"positive\">\n              {interestPaidArray.length} months (\n                {(interestPaidArray.length / 12).toFixed(2)} years)\n            </span>\n            </div>\n            <div className=\"dataSection\">\n              <div>\n                Loan Amount: ${mortgage} ({parseInt(principalWidth)}%)\n              </div>\n              <div>\n                Total Interest Paid:{' '}\n                <span className=\"negative\">${paidToBank} ({parseInt(interestWidth)}%)</span>\n              </div>\n              <div>\n\n                Total Paid:{' '}\n                <span className=\"negative\"> ${parseInt(totalPaid)}</span>\n              </div>\n            </div>\n            <div className=\"dataSection\">\n              <div className='negative'>\n                Total Paid ${parseInt(totalPaid)}\n              </div>\n              <div className='growGraph'>\n                <div\n                    id=\"principalBar\"\n                    className=\"detailsColumn\"\n                    style={{\n                      height: `${principalWidth/2}%`,\n                      backgroundColor: '#61dafb',\n                      border: '2px solid white',\n                      color: '#282c34',\n\n                    }}\n                >\n                  {parseInt(principalWidth)}%\n                </div>\n                <div\n                    id=\"interestPaid\"\n                    className=\"detailsColumn\"\n                    style={{\n                      height: `${interestWidth/2}%`,\n                      backgroundColor: 'red',\n                      border: '2px solid white',\n                      color: '#282c34',\n                    }}\n                >\n                  {parseInt(interestWidth)}%\n\n                </div>\n\n              </div>\n              <div\n                  style={{display: 'flex', justifyContent: 'space-around'}}>\n                <div>Principal</div>\n                <div className='negative'>Interest</div>\n              </div>\n            </div>\n          </div>\n      )}\n\n    </section>\n  );\n};\n\nexport default RevealData;\n","import React from 'react';\nimport sayKarenLogo from '../../assets/sayKaren_logo-white_8.1.2019.png'\n\nconst Footer= ()=> (\n\n\n    <footer\n        id=\"footer\"\n        className=\"footerDetails\"\n    >\n        Website created by:\n        <a\n            href=\"http://saykaren.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            <img src={sayKarenLogo}\n                 className=\"footerDetails\"\n                 id=\"sayKarenLogo\"\n                 alt=\"sayKaren.com\"\n            />\n        </a>\n    </footer>\n\n\n);\n\nexport default Footer","import React, { useState, useEffect } from 'react';\nimport '../../styling/App1.scss';\nimport numberConverter from './numberConverter';\nimport RevealData from './DataRevealed';\nimport Footer from './Footer';\n\n\nconst App = () => {\n\n  // // //User Input\n  const [principal, setPrincipal] = useState(172000);\n  const [interestRate, setInterestRate] = useState(3.75);\n  const [monthlyPayment, setMonthlyPayment] = useState(1500);\n  const [extraPayment, setExtraPayment] = useState(1000);\n\n  //Extra payment\n  const [extraPrincipalPaidArray, setExtraPrincipalPaidArray] = useState([]);\n  const [extraInterestPaidArray, setExtraInterestPaidArray] = useState([]);\n  const [\n    extraNewEndingPrincipalArray,\n    setExtraNewEndingPrincipalArray,\n  ] = useState([]);\n\n  //Update Input\n  const [principalPaidArray, setPrincipalPaidArray] = useState([]);\n  const [interestPaidArray, setInterestPaidArray] = useState([]);\n  const [newEndingPrincipalArray, setNewEndingPrincipalArray] = useState([]);\n\n  const generateCalculation = () => {\n    let currentPrincipal;\n    if (newEndingPrincipalArray.length > 0) {\n      currentPrincipal = numberConverter(\n          newEndingPrincipalArray[newEndingPrincipalArray.length - 1],\n      );\n    }\n\n    const processEachPayment = (num)=>{\n      let paymentInterestPaid = numberConverter(\n          currentPrincipal * ((interestRate * 0.01) / 12),\n      );\n      let principalPaid;\n      ////0 is last payment\n      if(num === 0){\n        principalPaid = numberConverter(currentPrincipal);\n      }else{\n        principalPaid = numberConverter(monthlyPayment - paymentInterestPaid);\n      }\n      let balance = numberConverter(currentPrincipal - principalPaid);\n      setPrincipalPaidArray([...principalPaidArray, principalPaid]);\n      setInterestPaidArray([...interestPaidArray, paymentInterestPaid]);\n      setNewEndingPrincipalArray([...newEndingPrincipalArray, balance]);\n    }\n\n    switch (true) {\n      case (newEndingPrincipalArray.length < 1):\n        setNewEndingPrincipalArray([principal]);\n        break;\n      case (currentPrincipal > monthlyPayment &&\n          newEndingPrincipalArray.length >= 1):\n        processEachPayment(1);\n        break;\n      case (currentPrincipal < monthlyPayment) :\n        processEachPayment(0);\n        break;\n      case (newEndingPrincipalArray[newEndingPrincipalArray.length - 1] <= 0):\n        break;\n      default:\n        break;\n    }\n\n  };\n\n  const extraCalculation = ()=>{\n    ///extra payment calculations\n    let currentExtraPrincipal;\n    if (extraNewEndingPrincipalArray.length > 0) {\n      currentExtraPrincipal = numberConverter(\n          extraNewEndingPrincipalArray[extraNewEndingPrincipalArray.length - 1],\n      );\n    }\n\n    const processEachExtraPayment =(num)=>{\n      let paymentExtraInterestPaid = numberConverter(\n          currentExtraPrincipal * ((interestRate * 0.01) / 12),\n      );\n      let principalExtraPaid;\n      ///Last payment 0\n      if(num === 0){\n        principalExtraPaid = numberConverter(currentExtraPrincipal);\n      }else{\n        principalExtraPaid = numberConverter(extraPayment + monthlyPayment - paymentExtraInterestPaid );\n      }\n      let extraBalance = numberConverter(currentExtraPrincipal - principalExtraPaid);\n      setExtraPrincipalPaidArray([...extraPrincipalPaidArray, principalExtraPaid]);\n      setExtraInterestPaidArray([...extraInterestPaidArray, paymentExtraInterestPaid]);\n      setExtraNewEndingPrincipalArray([...extraNewEndingPrincipalArray, extraBalance]);\n    }\n\n    switch (true) {\n      case (extraNewEndingPrincipalArray.length < 1):\n        setExtraNewEndingPrincipalArray([principal]);\n        break;\n      case (currentExtraPrincipal > (monthlyPayment + extraPayment) &&\n          extraNewEndingPrincipalArray.length >= 1):\n        processEachExtraPayment(1);\n        break;\n      case (currentExtraPrincipal < (monthlyPayment + extraPayment) && extraNewEndingPrincipalArray[extraNewEndingPrincipalArray.length - 1] > 0) :\n        processEachExtraPayment(0);\n        break;\n      case (extraNewEndingPrincipalArray[extraNewEndingPrincipalArray.length - 1] <= 0):\n        break;\n      default:\n        break;\n    }\n\n  }\n  const handleReset = (e, setEvent)=>{\n    let result = parseFloat(e);\n    setEvent(result);\n  }\n\n  useEffect(()=>{\n    if(newEndingPrincipalArray.length>=1 && newEndingPrincipalArray[newEndingPrincipalArray.length-1]>0){\n      setTimeout(generateCalculation, 100);\n    }\n  }, [newEndingPrincipalArray]);\n\n  useEffect(()=>{\n    if(extraNewEndingPrincipalArray.length>=1 && extraNewEndingPrincipalArray[extraNewEndingPrincipalArray.length-1]>0){\n      setTimeout(extraCalculation, 100);\n    }\n  }, [extraNewEndingPrincipalArray]);\n\n  const calculate =()=>{\n    generateCalculation()\n    if(extraPayment>0){\n      extraCalculation();\n    }\n  }\n\n  return (\n      <section className=\"App\">\n        <div id=\"inputSection\">\n          <form className=\"inputForm\">\n            <label className=\"inputSection\">\n              Mortage:\n              {(newEndingPrincipalArray.length <= 1 && (\n                  <input\n                      type=\"number\"\n                      name=\"Mortgage\"\n                      value={principal}\n                      onChange={(e) =>\n                          handleReset(e.currentTarget.value, setPrincipal)\n                      }\n                  ></input>\n              )) || <span>{principal}</span>}\n            </label>\n            <label className=\"inputSection\">\n              Interest Rate:\n              {(newEndingPrincipalArray.length <= 1 && (\n                  <input\n                      type=\"number\"\n                      name=\"Interest\"\n                      value={interestRate}\n                      onChange={(e) =>\n                          handleReset(e.currentTarget.value, setInterestRate)\n                      }\n                  ></input>\n              )) || <span>{interestRate}</span>}\n            </label>\n            <label className=\"inputSection\">\n              Monthly Payment:\n              {(newEndingPrincipalArray.length <= 1 && (\n                  <input\n                      type=\"number\"\n                      name=\"MonthlyPayment\"\n                      value={monthlyPayment}\n                      onChange={(e) =>\n                          // handleResetMonthlyPayment(e.currentTarget.value)\n                          handleReset(e.currentTarget.value, setMonthlyPayment)\n                      }\n                  ></input>\n              )) || <span>{monthlyPayment}</span>}\n            </label>\n\n            <label className=\"inputSection\">\n              Extra Monthly Payment:\n              {(newEndingPrincipalArray.length <= 1 && (\n                  <input\n                      type=\"number\"\n                      name=\"ExtraMonthlyPayment\"\n                      value={extraPayment}\n                      onChange={(e) =>\n                          handleReset(e.currentTarget.value, setExtraPayment)\n                      }\n                  ></input>\n              )) || <span>{extraPayment}</span>}\n            </label>\n          </form>\n        </div>\n        {(newEndingPrincipalArray[newEndingPrincipalArray.length - 1] > 0 ||\n            newEndingPrincipalArray[newEndingPrincipalArray.length - 1] ===\n            undefined) && (\n            <button onClick={() => calculate()}>Calculate</button>\n        )}\n\n        <button onClick={() => window.location.reload()}>Reset Numbers</button>\n        <RevealData interestPaidArray={interestPaidArray} mortgage={principal} extraInterestPaidArray={extraInterestPaidArray} />\n        {/* ****Below is for extra********* */}\n        { extraNewEndingPrincipalArray.length>1 &&\n        <div id=\"flexTable\">\n          {/*<div className=\"tableCell\">Date</div>*/}\n          <div className=\"tableCell\">\n            Extra Principal\n            <div className=\"cellDetails\">{principal}</div>\n            {extraNewEndingPrincipalArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n          <div className=\"tableCell\">\n            Monthly Payment\n            {extraNewEndingPrincipalArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {monthlyPayment}\n                </div>\n            ))}\n          </div>\n\n          <div className=\"tableCell bottomCell\">\n            Interest Paid With Extra Included\n            <div className=\"cellDetails\">-</div>\n            {extraInterestPaidArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n          <div className=\"tableCell\">\n            Principal Paid With Extra Included\n            <div className=\"cellDetails\">-</div>\n            {extraPrincipalPaidArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n\n          <div className=\"tableCell\">\n            Ending Principal with Extra Included\n            {extraNewEndingPrincipalArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n        </div>\n        }\n\n        <div id=\"flexTable\">\n          {/*<div className=\"tableCell\">Date</div>*/}\n          <div className=\"tableCell\">\n            Principal\n            <div className=\"cellDetails\">{principal}</div>\n            {newEndingPrincipalArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n          <div className=\"tableCell\">\n            Monthly Payment\n            {newEndingPrincipalArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {monthlyPayment}\n                </div>\n            ))}\n          </div>\n          <div className=\"tableCell bottomCell\">\n            Interest Paid\n            <div className=\"cellDetails\">-</div>\n            {interestPaidArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n          <div className=\"tableCell\">\n            Principal Paid\n            <div className=\"cellDetails\">-</div>\n            {principalPaidArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n\n          <div className=\"tableCell\">\n            Ending Principal\n            {newEndingPrincipalArray.map((value, index) => (\n                <div className=\"cellDetails\" key={index}>\n                  {value}\n                </div>\n            ))}\n          </div>\n        </div>\n        <Footer/>\n      </section>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}